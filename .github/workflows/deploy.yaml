# .github/workflows/deploy.yml
name: Deploy Discord Bot

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (needed to access secrets, etc.)
        uses: actions/checkout@v4

      - name: Install cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          chmod +x cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared

      - name: Set up SSH key
        env:
          SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          TEST: ${{ secrets.TEST }}
        run: |
          echo "$TEST"
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan 127.0.0.1 >> ~/.ssh/known_hosts

      - name: Start Cloudflare Tunnel in background
        env:
          TEST: ${{ secrets.TEST }}
          HOSTNAME: ${{ secrets.SERVER_HOST }}
          CLOUDFLARE_CLIENT_ID: ${{ secrets.CLOUDFLARE_CLIENT_ID }}
          CLOUDFLARE_CLIENT_SECRET: ${{ secrets.CLOUDFLARE_CLIENT_SECRET }}
        run: |
          echo "$TEST"
          cloudflared access tcp \
            --hostname $HOSTNAME \
            --id $CLOUDFLARE_CLIENT_ID \
            --secret $CLOUDFLARE_CLIENT_SECRET \
            --url localhost:2222 &

          # Wait for tunnel to be ready
          for i in {1..10}; do
            nc -z localhost 2222 && break
            echo "Waiting for tunnel..."
            sleep 3
          done

      - name: SSH and deploy
        env:
          TEST: ${{ secrets.TEST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh -p 2222 -o StrictHostKeyChecking=no $SERVER_USER@localhost << 'EOF'
            cd /opt/steve-bot
            git pull origin main
            npm install
            npm run build
            systemctl restart steve-bot
          EOF
